name: publish

on:
  push:
    tags:
      - "*"
env:
  PROJECT_NAME: wasm-instrumentation
  DOCKER_IMAGE_NAME: wasm-instrumentation:latest
  DOCKER_RUN_COMMAND: docker run --rm -i -v ${{ github.workspace }}:/home/wasm-instrumentation wasm-instrumentation:latest bash -c

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: actions/checkout@v3
      - name: Submodule
        working-directory: ${{github.workspace}}/thirdparty
        run: git submodule update --init && cd binaryen && git submodule update --init
      - uses: docker/build-push-action@v3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.DOCKER_IMAGE_NAME }}
          load: true

      - name: "Build JS variant"
        run: |
            ${{ env.DOCKER_RUN_COMMAND }} '
              cd /opt/emsdk
              . emsdk_env.sh
              cd /home/${{ env.PROJECT_NAME }}
              mkdir dist
              cd dist
              emcc --version
              emcmake cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DGTEST_LIBRARY=/usr/src/gtest/lib/libgtest.a -DGTEST_MAIN_LIBRARY=/usr/src/gtest/lib/libgtest_main.a -DGTEST_INCLUDE_DIR=/usr/src/gtest/include/ -DBUILD_TESTS=0 -DEMSCRIPTEN=1
              emmake make -j$(nproc) wasm-instrumentation
            '

      - name: generate Declaration
        run: |
          ${{ env.DOCKER_RUN_COMMAND }} '
            npm run genDeclaration
          '
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_PUBLISH_TOKEN }}
          greater-version-only: true